{"version":3,"file":"search.js","sourceRoot":"","sources":["../src/search.ts"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,+BAAmD;AACnD,iCAAqC;AACrC,2CAAgD;AAChD,kDAAkD;AAElD,MAAM,CAAC,GAAG,KAAK,CAAC,oBAAoB,CAAC,CAAC;AAOtC,MAAM,QAAQ,GAAkC,IAAI,sBAAe,CAAC,EAAE,CAAC,CAAC;AAE3D,QAAA,MAAM,GAAG,GAAG,EAAE;IACvB,MAAM,MAAM,GAAG,oBAAY,CAAC;QACxB,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,IAAI;KAClB,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC;QACR,IAAI,EAAE,6BAAiB;KAC1B,EAAE,GAAG,EAAE;QACJ,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE;QACxB,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACtB,MAAM,EACF,IAAI,EACJ,MAAM,EACN,EAAE,EACF,GAAG,EACN,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAC,UAAU,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;SAC5C;aAAM;YACH,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACpB;IACL,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEW,QAAA,OAAO,GAA6B,QAAQ,CAAC,YAAY,EAAE,CAAC","sourcesContent":["import * as debug from 'debug';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { createSocket } from 'dgram';\nimport { ANNOUNCEMENT_PORT } from './constants';\nimport * as keepalive from './packets/keep-alive';\n\nconst d = debug('pro-dj-link:search');\n\nexport interface BaseDevice {\n    name: string;\n    device: number;\n}\n\nconst _devices: BehaviorSubject<BaseDevice[]> = new BehaviorSubject([]);\n\nexport const search = () => {\n    const socket = createSocket({\n        type: 'udp4',\n        reuseAddr: true\n    });\n    socket.bind({\n        port: ANNOUNCEMENT_PORT\n    }, () => {\n        socket.setBroadcast(true);\n        socket.setMulticastTTL(128);\n    });\n    socket.on('message', data => {\n        if (keepalive.test(data)) {\n            const {\n                name,\n                device,\n                ip,\n                mac\n            } = keepalive.parse(data);\n            d(`Player ${device} (${name})`, mac, ip);\n        } else {\n            d('50000', data);\n        }\n    });\n};\n\nexport const devices: Observable<BaseDevice[]> = _devices.asObservable();\n"]}