"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("../constants");
const ip_1 = require("ip");
const mac_address_1 = require("mac-address");
exports.test = (buffer) => buffer.slice(0, constants_1.KEEP_ALIVE_HEADER.length).equals(constants_1.KEEP_ALIVE_HEADER) &&
    buffer.length === 0x36;
/**
 * 0x01 == CDJ
 * 0x02 == Mixer
 */
const isCdj = (buffer) => buffer[0x34] === 0x01 && buffer[0x25] === 0x01;
const getDeviceName = (buffer) => buffer.toString('utf8', 0x0b, 0x20);
const getDeviceNumber = (buffer) => buffer[0x24];
const getDeviceMac = (buffer) => mac_address_1.toString(buffer, 0x26);
const getDeviceIp = (buffer) => ip_1.fromLong(buffer.readInt32BE(0x2c));
exports.parse = (buffer) => {
    if (!exports.test(buffer)) {
        throw new InvalidPacketHeader();
    }
    return {
        name: getDeviceName(buffer),
        device: getDeviceNumber(buffer),
        mac: getDeviceMac(buffer),
        ip: getDeviceIp(buffer),
        type: isCdj(buffer) ? 'CDJ' : 'Mixer'
    };
};
class InvalidPacketHeader extends Error {
    constructor() {
        super('Unexpected Packet Header');
    }
}
exports.InvalidPacketHeader = InvalidPacketHeader;
//# sourceMappingURL=keep-alive.js.map